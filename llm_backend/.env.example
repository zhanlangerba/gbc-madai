# GBC MedAI 项目环境变量配置示例
# 复制此文件为 .env 并填入您的实际配置

# =============================================================================
# AI 模型配置
# =============================================================================

# Deepseek 在线模型 API 配置
DEEPSEEK_API_KEY=sk-your-deepseek-api-key-here
DEEPSEEK_BASE_URL=https://api.deepseek.com
DEEPSEEK_MODEL=deepseek-chat
DEEPSEEK_REASON_MODEL=deepseek-reasoner  # 专门用于推理任务的模型

# 视觉模型配置，用来处理图片的解析
VISION_API_KEY=sk-your-vision-api-key-here
VISION_BASE_URL=https://api.openai.com/v1
VISION_MODEL=gpt-4o-mini

# 嵌入模型配置，用于语义缓存和向量搜索
EMBEDDING_API_KEY=sk-your-embedding-api-key-here
EMBEDDING_BASE_URL=https://api.openai.com/v1
EMBEDDING_MODEL=text-embedding-3-small

# 通过 Ollama 本地部署的模型（可选）
OLLAMA_BASE_URL=http://localhost:11434  # 根据实际情况修改
OLLAMA_CHAT_MODEL=qwen2.5:32b   # 聊天模型
OLLAMA_REASON_MODEL=deepseek-r1:32b  # 推理模型
OLLAMA_AGENT_MODEL=qwen2.5:32b  # Agent模型
OLLAMA_EMBEDDING_MODEL=bge-m3  # 词向量模型

# 模型服务选择
CHAT_SERVICE=deepseek  # 可选: deepseek, ollama
REASON_SERVICE=deepseek  # 可选: deepseek, ollama
AGENT_SERVICE=deepseek  # 可选: deepseek, ollama

# =============================================================================
# 搜索服务配置
# =============================================================================

SEARCH_SERVICE=bocha_ai  # 可选值: serpapi, baidu_ai, bocha_ai

# SerpAPI配置 (https://serpapi.com/)
SERPAPI_KEY=your-serpapi-key-here

# 百度AI搜索配置 (https://cloud.baidu.com/doc/AppBuilder/s/amaxd2det)
BAIDU_AI_SEARCH_API_KEY=your-baidu-ai-search-key-here
BAIDU_AI_SEARCH_BASE_URL=https://qianfan.baidubce.com/v2/ai_search
BAIDU_AI_SEARCH_MODEL=ernie-3.5-8k

# 博查AI搜索配置 (https://open.bochaai.com/)
BOCHA_AI_API_KEY=sk-your-bocha-ai-key-here
BOCHA_AI_BASE_URL=https://api.bochaai.com/v1

SEARCH_RESULT_COUNT=10   # 联网搜索结果的数量

# =============================================================================
# 数据库配置
# =============================================================================

# MySQL数据库配置
DB_HOST=localhost
DB_PORT=3306
DB_USER=root
DB_PASSWORD=your-mysql-password
DB_NAME=assist_gen

# Neo4j数据库配置
NEO4J_URL=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your-neo4j-password
NEO4J_DATABASE=neo4j

# Redis缓存配置
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_CACHE_EXPIRE=3600
REDIS_CACHE_THRESHOLD=0.90  # 缓存阈值

# =============================================================================
# GraphRAG 配置（可选）
# =============================================================================

# Microsoft GraphRAG 配置
GRAPHRAG_PROJECT_DIR=./app/graphrag # GraphRAG项目目录
GRAPHRAG_DATA_DIR=data                         # 数据目录名称
GRAPHRAG_QUERY_TYPE=local                      # 查询类型: local, global, drift, basic
GRAPHRAG_RESPONSE_TYPE=text                    # 响应类型: text
GRAPHRAG_COMMUNITY_LEVEL=3                     # 社区级别
GRAPHRAG_DYNAMIC_COMMUNITY=false               # 是否动态选择社区

# GraphRAG模型配置
GRAPHRAG_API_BASE=https://api.openai.com/v1
GRAPHRAG_API_KEY=sk-your-graphrag-api-key-here
GRAPHRAG_MODEL_NAME=gpt-4o-mini
Embedding_API_BASE=https://api.openai.com/v1
Embedding_API_KEY=sk-your-embedding-api-key-here
Embedding_MODEL_NAME=text-embedding-3-small
